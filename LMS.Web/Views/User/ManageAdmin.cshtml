@{
    ViewBag.Title = "Manage Administrators";
}
@section head {
    <link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/Content/kendo-styles/kendo.silver.min.css" rel="stylesheet" />
    <link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.dataviz.min.css" rel="stylesheet" />
    <link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.dataviz.default.min.css" rel="stylesheet" />
}
<div data-ng-controller="UserManageAdminController" class="row col-md-12">
    <div class="col-md-3">
        <div class="lead">Edit Admin Users</div>
        @*<div id="treeview" data-role="treeview" class="k-widget k-treeview" tabindex="0" role="tree" aria-activedescendant="treeview_tv_active">
            <div class="k-loading" style="display: inline-block; width: 16px; height: 16px; top: 0; left: 0;"></div>&nbsp;Loading...
        </div>*@
        <div>
            <div class="k-loading" style="display: inline-block; width: 16px; height: 16px; top: 0; left: 0;"></div>&nbsp;Loading...
        </div>
        <div class="tree-view" kendo-tree-view="tree" k-data-source="treeData" k-template="itemTemplate" k-on-change="selectedItem=dataItem"></div>
    </div>
    <div class="col-md-9 form-horizontal">
        <form name="selectClient">
            <div class="lead">Create new Admin</div>
            <div class="form-group">
                <label class="col-md-3 control-label">New user for client:</label>
                <div class="col-md-9">
                    <select class="form-control" data-ng-options="client as client.Name for client in ClientsList" data-ng-model="CurrentClient"></select>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-2 col-md-offset-10">
                    <a href="#" data-ng-show="CurrentClient.ClientId === -1" class="btn btn-primary disabled pull-right">Create new admin &raquo;</a>
                    <a href="#" data-ng-show="CurrentClient.ClientId !== -1" data-toggle="modal" data-target="#CreateUserModal" class="btn btn-primary pull-right">Create new admin &raquo;</a>
                </div>
            </div>
        </form>
    </div>
    @Html.Partial("_ManageAdmin.create")
    @Html.Partial("_ManageAdmin.edit")
</div>
@section scripts {
    <script type="text/javascript" src="http://cdn.kendostatic.com/2014.2.903/js/kendo.all.min.js"></script>
    <script src="~/Scripts/Library/kendo-js/kendo.angular.min.js"></script>
    <script type="text/javascript">
        //var UserGroups;
        //var CurrentUser;

        //$(function() {
        //    // load clients
        //    $.ajax({
        //        url: API_URL + "/clients/GetClients/",
        //        beforeSend: function (request) {
        //            request.setRequestHeader("Authorization", "Bearer " + TOKEN);
        //        },
        //        type: "GET",
        //        success: function (clients) {
        //            $.each(clients, function () {
        //                $("#Clients").append($("<option />").val(this.ClientId).text(this.Name));
        //            });
        //        }
        //    });

        //    // create user
        //    $("#SaveUser").click(function() {
        //        $.ajax({
        //            url: API_URL + "/Account/RegisterAdmin/",
        //            beforeSend: function(request) {
        //                request.setRequestHeader("Authorization", "Bearer " + TOKEN);
        //            },
        //            data: { ClientId: $("#Clients").val(), FirstName: $("#FirstName").val(), LastName: $("#LastName").val(), EmailAddress: $("#Email").val(), Password: $("#Password").val() },
        //            type: "POST",
        //            success: function(result) {
        //                $("#CreateUserModal").modal('hide');
        //                if (result.length > 0) {
        //                    showUserFailure(result);
        //                } else {
        //                    showUserSuccess();
        //                }
        //            },
        //            error: function(jqXHR, textStatus, errorThrown) {
        //                console.log(errorThrown);
        //            }
        //        });
        //    });

        //    // update user
        //    $("#SaveUpdatedUser").click(function() {
        //        $.ajax({
        //            url: API_URL + "/Users/UpdateUser/" + CurrentUser.id,
        //            beforeSend: function(request) {
        //                request.setRequestHeader("Authorization", "Bearer " + TOKEN);
        //            },
        //            data: { FirstName: $("#UpdateFirstName").val(), LastName: $("#UpdateLastName").val(), UserId: CurrentUser.id },
        //            type: "PATCH",
        //            success: function(result) {
        //                $("#UpdateUserModal").modal("hide");
        //                showUserUpdate();
        //            },
        //            error: function(jqXHR, textStatus, errorThrown) {
        //                console.log(errorThrown);
        //            }
        //        });
        //    });

        //    // delete user
        //    $("#DeleteUser").click(function() {

        //        var userName = $("#UpdateFirstName").val() + $("#UpdateLastName").val();
        //        $.ajax({
        //            url: API_URL + "/Users/DeleteUser/" + CurrentUser.id,
        //            beforeSend: function(request) {
        //                request.setRequestHeader("Authorization", "Bearer " + TOKEN);
        //            },
        //            type: "DELETE",
        //            success: function(result) {
        //                $("#UpdateUserModal").modal("hide");
        //                showUserDelete(userName);
        //            },
        //            error: function(jqXHR, textStatus, errorThrown) {
        //                console.log(errorThrown);
        //            }
        //        });
        //    });

        //    // initialise tree
        //    $.ajax({
        //        url: API_URL + "/Users/GetAdmins/",
        //        beforeSend: function(request) {
        //            request.setRequestHeader("Authorization", "Bearer " + TOKEN);
        //        },
        //        success: function(userGroups) {
        //            UserGroups = addIdToUsersInTree(JSON.parse(userGroups));
        //            var treeview = $("#treeview").data("kendoTreeView");
        //            $("#treeview").kendoTreeView({
        //                dataSource: UserGroups
        //            });

        //            // style the group elements
        //            $(".k-sprite.group").parent().css({ "background-color": "#e7e7e7", "padding-right": "15px" });
        //        }
        //    });

        //    // bind to ajax created elements (clicking on categories in tree)
        //    $(document).on('click', '.k-in', function() {
        //        var isUser = $(this).find(".group").length == 0;
        //        var userId = $(this).find("span").attr("class");
        //        var name = $(this).html().split("</span>")[1];
        //        userId = userId.split("k-sprite ")[1];

        //        if (isUser) {
        //            $.each(UserGroups, function(i, outerNode) {
        //                if (outerNode.hasOwnProperty('items')) {
        //                    $.each(outerNode.items, function(j, innerNode) {
        //                        if (innerNode.id == userId) {
        //                            CurrentUser = innerNode;
        //                        }
        //                    });
        //                }
        //                // look for user not in group
        //                if (outerNode.spriteCssClass != "group" && outerNode.id == userId) {
        //                    CurrentUser = outerNode;
        //                }
        //            });
        //            showUserEditor(userId);
        //        } else {
        //            // update client selected in drop down
        //            $("#Clients option").each(function() {
        //                if ($(this).text() == name) {
        //                    $(this).attr('selected', 'selected');
        //                }
        //            });
        //        }
        //    });
        //});

        //function showUserSuccess() {
        //    var msg = "Admin user: <b>" + $("#FirstName").val() + " " + $("#LastName").val() + "</b> successfully created!";

        //    $(".alert-success .msg")
        //        .html(msg)
        //        .parent()
        //        .removeClass("hidden")
        //        .slideDown();

        //    // reset form
        //    $("#FirstName").val("");
        //    $("#LastName").val("");
        //    $("#Password").val("");
        //    $("#ConfirmPassword").val("");
        //    $("#Email").val("");

        //    // update tree
        //    updateTree();
        //}

        //function showUserFailure(msg) {

        //    $(".alert-danger .msg")
        //        .html(msg)
        //        .parent()
        //        .removeClass("hidden")
        //        .slideDown();

        //    // update tree
        //    updateTree();
        //}

        //function showUserEditor(userId) {
        //    $.ajax({
        //        url: API_URL + "/Users/GetUser/" + userId,
        //        beforeSend: function(request) {
        //            request.setRequestHeader("Authorization", "Bearer " + TOKEN);
        //        },
        //        success: function(user) {
        //            $("#UpdateFirstName").val(user.FirstName);
        //            $("#UpdateLastName").val(user.LastName);
        //            $("#UpdateUserModal").modal("show");
        //        }
        //    });
        //}

        //function showUserUpdate() {
        //    var msg = "Admin User: <b>" + $("#UpdateFirstName").val() + " " + $("#UpdateLastName").val() + "</b> successfully updated!";

        //    $(".alert-success .msg")
        //        .html(msg)
        //        .parent()
        //        .removeClass("hidden")
        //        .slideDown();

        //    // update tree
        //    //updateTree();
        //}

        //function showUserDelete(userName) {
        //    var msg = "Admin User: <b>" + userName + "</b> successfully deleted!";

        //    $(".alert-danger .msg")
        //        .html(msg)
        //        .parent()
        //        .removeClass("hidden")
        //        .slideDown();

        //    // update tree
        //    //updateTree();
        //}

        //function updateTree() {
        //    $("#treeview").slideUp();
        //    $.ajax({
        //        url: API_URL + "/Users/GetAdmins/",
        //        beforeSend: function(request) {
        //            request.setRequestHeader("Authorization", "Bearer " + TOKEN);
        //        },
        //        success: function(userGroups) {
        //            UserGroups = addIdToUsersInTree(JSON.parse(userGroups));
        //            var treeview = $("#treeview").data("kendoTreeView");
        //            treeview.setDataSource(new kendo.data.HierarchicalDataSource({
        //                data: UserGroups
        //            }));

        //            // style the group elements
        //            $(".k-sprite.group").parent().css({ "background-color": "#e7e7e7", "padding-right": "15px" });

        //            $("#treeview").slideDown();
        //        }
        //    });
        //}

        //function addIdToUsersInTree(userTree) {
        //    $.each(userTree, function(i, outerNode) {
        //        if (outerNode.hasOwnProperty('items')) {
        //            $.each(outerNode.items, function(j, innerNode) {
        //                // add user id to user node
        //                if (!innerNode.hasOwnProperty('spriteCssClass')) {
        //                    innerNode["spriteCssClass"] = innerNode.id;
        //                }
        //            });
        //        }
        //        // add user id to ungrouped user node
        //        if (!outerNode.hasOwnProperty('spriteCssClass')) {
        //            outerNode["spriteCssClass"] = outerNode.id;
        //        }
        //    });

        //    return userTree;
        //}
    </script>
    <script type="text/javascript">
        (function() {
            var app = angular.module("LMS", ["kendo.directives"]);

            var UserManageAdminController = function($scope, $http) {

                manageAdminScope = $scope;
                manageAdminScope.ClientsList = [{ ClientId: -1, Name: "Please select a client..." }];
                manageAdminScope.CurrentClient = manageAdminScope.ClientsList[0];
                manageAdminScope.PasswordsMatch = true;
                
                manageAdminScope.itemTemplate = "<span ng-click='edit(dataItem)'>{{dataItem.text}}</span>";
                manageAdminScope.treeData = [{ text: "" }];

                manageAdminScope.init = function() {
                    manageAdminScope.loadClients(API_URL + "/clients/GetClients/");
                    manageAdminScope.loadAdminUsers();
                }

                manageAdminScope.getDefaultUser = function () {

                    var defaultUser = {
                        ClientId: -1,
                        FirstName: "",
                        LastName: "",
                        EmailAddress: "",
                        Password: "",
                        ConfirmPassword: ""
                    }

                    return JSON.parse(JSON.stringify(defaultUser));
                }                

                manageAdminScope.loadClients = function(file) {
                    $http({
                        method: "GET",
                        url: file,
                        headers: {
                            "Authorization": "Bearer " + TOKEN
                        }
                    })
                    .success(function(data) {
                        manageAdminScope.ClientsList = manageAdminScope.ClientsList.concat(data);
                    })
                    .error(function(data, status) {
                        manageAdminScope.showClientFailure(data);
                    });
                };

                manageAdminScope.loadAdminUsers = function() {
                    $http({
                        method: "GET",
                        url: API_URL + "/Users/GetAdmins/",
                        headers: {
                            "Authorization": "Bearer " + TOKEN
                        }
                    })
                    .success(function(data) {
                        $(".tree-view").hide();
                        manageAdminScope.treeData = JSON.parse(data);                        
                        $(".k-loading").parent().slideUp(function() {                                                      
                            $(".tree-view").slideDown(function () {
                                // style the group elements - this needs to be done as late as possible so the DOM items exist.
                                $(".k-sprite.group").parent().css({ "background-color": "#e7e7e7", "padding-right": "15px" });
                            });
                        });
                    })
                    .error(function(data, status) {
                        manageAdminScope.showClientFailure(data);
                    });
                };

                manageAdminScope.checkPasswordsMatch = function() {
                    manageAdminScope.PasswordsMatch = manageAdminScope.NewUser.Password === manageAdminScope.NewUser.ConfirmPassword;
                }

                manageAdminScope.create = function() {
                    var newUser = manageAdminScope.NewUser;
                    newUser.ClientId = manageAdminScope.CurrentClient.ClientId;

                    if (manageAdminScope.PasswordsMatch) {
                        $http({
                            method: "POST",
                            url: API_URL + "/Account/RegisterAdmin/",
                            data: newUser,
                            headers: {
                                "Authorization": "Bearer " + TOKEN
                            }
                        })
                        .success(function(data) {
                            $("#CreateUserModal").modal('hide');
                            manageAdminScope.showUserSuccess();
                        })
                        .error(function(data, status) {
                            $("#CreateUserModal").modal('hide');
                            manageAdminScope.showUserFailure(data);
                        });
                    }
                }

                // show the editor dialog and form
                manageAdminScope.edit = function(dataItem) {
                    if (!dataItem.hasOwnProperty('spriteCssClass')) { // && !dataItem.spriteCssClass === "group") {
                        $http({
                            method: "GET",
                            url: API_URL + "/Users/GetUser/" + dataItem.id,
                            headers: {
                                "Authorization": "Bearer " + TOKEN
                            }
                        })
                        .success(function (data) {
                            manageAdminScope.CurrentUser = manageAdminScope.getDefaultUser();
                            manageAdminScope.CurrentUser.FirstName = data.FirstName;
                            manageAdminScope.CurrentUser.LastName = data.LastName;
                            manageAdminScope.CurrentUser.id = dataItem.id;
                            $("#UpdateUserModal").modal("show");
                        })
                        .error(function(data, status) {
                            manageAdminScope.showClientFailure(data);
                        });
                    }
                }

                manageAdminScope.update = function () {
                    $http({
                        method: "PATCH",
                        url: API_URL + "/Users/UpdateUser/" + manageAdminScope.CurrentUser.id,
                        data: { FirstName: manageAdminScope.CurrentUser.FirstName, LastName: manageAdminScope.CurrentUser.LastName, UserId: manageAdminScope.CurrentUser.id },
                        headers: {
                            "Authorization": "Bearer " + TOKEN
                        }
                    })
                    .success(function (data) {
                        $("#UpdateUserModal").modal("hide");
                        manageAdminScope.showUserUpdate();
                    })
                    .error(function (data, status) {
                        $("#UpdateUserModal").modal("hide");
                        manageAdminScope.showUserFailure(data);
                    });
                }

                manageAdminScope.delete = function () {
                    $http({
                        method: "DELETE",
                        url: API_URL + "/Users/DeleteUser/" + manageAdminScope.CurrentUser.id,                        
                        headers: {
                            "Authorization": "Bearer " + TOKEN
                        }
                    })
                    .success(function (data) {
                        $("#UpdateUserModal").modal("hide");
                        manageAdminScope.showUserDelete();
                    })
                    .error(function (data, status) {
                        $("#UpdateUserModal").modal("hide");
                        manageAdminScope.showUserFailure(data);
                    });
                }

                manageAdminScope.showUserSuccess = function() {
                    var msg = "Admin user: <b>" + manageAdminScope.NewUser.FirstName + " " + manageAdminScope.NewUser.LastName + "</b> successfully created!";

                    $(".alert-success .msg")
                        .html(msg)
                        .parent()
                        .removeClass("hidden")
                        .slideDown();

                    // reset field
                    manageAdminScope.NewUser = manageAdminScope.getDefaultUser();

                    // update tree
                    manageAdminScope.loadAdminUsers();
                }

                manageAdminScope.showUserUpdate = function () {
                    var msg = "Admin user: <b>" + manageAdminScope.CurrentUser.FirstName + " " + manageAdminScope.CurrentUser.LastName + "</b> successfully updated!";
                    $(".alert-success .msg")
                        .html(msg)
                        .parent()
                        .removeClass("hidden")
                        .slideDown();

                    // reset field
                    manageAdminScope.NewUser = manageAdminScope.getDefaultUser();

                    // update tree
                    manageAdminScope.loadAdminUsers();
                }

                manageAdminScope.showUserDelete = function () {
                    var msg = "Admin user: <b>" + manageAdminScope.CurrentUser.FirstName + " " + manageAdminScope.CurrentUser.LastName + "</b> successfully deleted!";
                    $(".alert-danger .msg")
                        .html(msg)
                        .parent()
                        .removeClass("hidden")
                        .slideDown();

                    // reset field
                    manageAdminScope.NewUser = manageAdminScope.getDefaultUser();

                    // update tree
                    manageAdminScope.loadAdminUsers();
                }

                manageAdminScope.showUserFailure = function(data) {

                    $(".alert-danger .msg")
                        .html(data.ExceptionMessage)
                        .parent()
                        .removeClass("hidden")
                        .slideDown();
                }

                // run the initialize method
                manageAdminScope.init();
                manageAdminScope.NewUser = manageAdminScope.getDefaultUser();

            }
            app.controller("UserManageAdminController", ["$scope", "$http", UserManageAdminController]);
        }());
    </script>
}
