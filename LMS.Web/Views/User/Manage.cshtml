@{
    ViewBag.Title = "Manage Users";
}
@section head {
    <link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/Content/kendo-styles/kendo.silver.min.css" rel="stylesheet" />
    <link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.dataviz.min.css" rel="stylesheet" />
    <link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.dataviz.default.min.css" rel="stylesheet" />
}
<div class="row col-md-12" data-ng-controller="UserManageController">
    <div class="col-md-3">
        <div class="lead">Edit Users</div>
        <div>
            <div class="k-loading" style="display: inline-block; width: 16px; height: 16px; top: 0; left: 0;"></div>&nbsp;Loading...
        </div>
        <div class="tree-view" kendo-tree-view="tree" k-data-source="treeData" k-template="itemTemplate" k-on-change="selectedItem=dataItem"></div>
    </div>
    @Html.Partial("_ManageUser.create")
    @Html.Partial("_ManageUser.edit")
</div>
@section scripts {
    <script type="text/javascript" src="http://cdn.kendostatic.com/2014.2.903/js/kendo.all.min.js"></script>  
    <script src="~/Scripts/Library/kendo-js/kendo.angular.min.js"></script>
    <script type="text/javascript">
        //var UserGroups;
        //var CurrentUser;

        //function updateTree() {
        //    $("#treeview").slideUp();
        //    $.ajax({
        //        url: API_URL + "/UsersInUserGroups/GetUserGroupsAndUsers/",
        //        beforeSend: function (request) {
        //            request.setRequestHeader("Authorization", "Bearer " + TOKEN);
        //        },
        //        success: function (userGroups) {
        //            UserGroups = addIdToUsersInTree(JSON.parse(userGroups));
        //            var treeview = $("#treeview").data("kendoTreeView");
        //            treeview.setDataSource(new kendo.data.HierarchicalDataSource({
        //                data: UserGroups
        //            }));

        //            // style the group elements
        //            $(".k-sprite.group").parent().css({ "background-color": "#e7e7e7", "padding-right": "15px" });

        //            $("#treeview").slideDown();
        //        }
        //    });
        //}

        //function addIdToUsersInTree(userTree) {
        //    $.each(userTree, function (i, outerNode) {
        //        if (outerNode.hasOwnProperty('items')) {
        //            $.each(outerNode.items, function (j, innerNode) {
        //                // add user id to user node
        //                if (!innerNode.hasOwnProperty('spriteCssClass')) {
        //                    innerNode["spriteCssClass"] = innerNode.id;
        //                }
        //            });
        //        }
        //        // add user id to ungrouped user node
        //        if (!outerNode.hasOwnProperty('spriteCssClass')) {
        //            outerNode["spriteCssClass"] = outerNode.id;
        //        }
        //    });

        //    return userTree;
        //}

        //$(function() {
            // initialise tree
            //$.ajax({
            //    url: API_URL + "/UsersInUserGroups/GetUserGroupsAndUsers/",
            //    beforeSend: function (request) {
            //        request.setRequestHeader("Authorization", "Bearer " + TOKEN);
            //    },
            //    success: function (userGroups) {
            //        UserGroups = addIdToUsersInTree(JSON.parse(userGroups));
            //        $("#treeview").kendoTreeView({
            //            dataSource: UserGroups
            //        });

            //        // style the group elements
            //        $(".k-sprite.group").parent().css({ "background-color": "#e7e7e7", "padding-right": "15px" });
            //    }
            //});

            // bind to ajax created elements (clicking on categories in tree)
            //$(document).on('click', '.k-in', function () {
            //    var isUser = $(this).find(".group").length == 0;
            //    var userId = $(this).find("span").attr("class");
            //    userId = userId.split("k-sprite ")[1];

            //    if (isUser) {
            //        $.each(UserGroups, function (i, outerNode) {
            //            if (outerNode.hasOwnProperty('items')) {
            //                $.each(outerNode.items, function (j, innerNode) {
            //                    if (innerNode.id == userId) {
            //                        CurrentUser = innerNode;
            //                    }
            //                });
            //            }
            //            // look for user not in group
            //            if (outerNode.spriteCssClass != "group" && outerNode.id == userId) {
            //                CurrentUser = outerNode;
            //            }
            //        });
            //        showUserEditor(userId);
            //    }
            //});

            // create user
            //$("#SaveUser").click(function () {
            //    $.ajax({
            //        url: API_URL + "/Account/Register/",
            //        beforeSend: function (request) {
            //            request.setRequestHeader("Authorization", "Bearer " + TOKEN);
            //        },
            //        data: { FirstName: $("#FirstName").val(), LastName: $("#LastName").val(), EmailAddress: $("#Email").val(), Password: $("#Password").val() },
            //        type: "POST",
            //        success: function (result) {
            //            if (result.length > 0) {
            //                showUserFailure(result);
            //            } else {
            //                showUserSuccess();
            //            }
            //        },
            //        error: function (jqXHR, textStatus, errorThrown) {
            //            console.log(errorThrown);
            //        }
            //    });
            //});

            // update user
            //$("#SaveUpdatedUser").click(function() {
            //    $.ajax({
            //        url: API_URL + "/Users/UpdateUser/" + CurrentUser.id,
            //        beforeSend: function(request) {
            //            request.setRequestHeader("Authorization", "Bearer " + TOKEN);
            //        },
            //        data: { FirstName: $("#UpdateFirstName").val(), LastName: $("#UpdateLastName").val(), UserId: CurrentUser.id },
            //        type: "PATCH",
            //        success: function(result) {
            //            $("#UpdateUserModal").modal("hide");
            //            showUserUpdate();
            //        },
            //        error: function(jqXHR, textStatus, errorThrown) {
            //            console.log(errorThrown);
            //        }
            //    });
            //});

            //// delete user
            //$("#DeleteUser").click(function() {

            //    var userName = $("#UpdateFirstName").val() + $("#UpdateLastName").val();
            //    $.ajax({
            //        url: API_URL + "/Users/DeleteUser/" + CurrentUser.id,
            //        beforeSend: function(request) {
            //            request.setRequestHeader("Authorization", "Bearer " + TOKEN);
            //        },
            //        type: "DELETE",
            //        success: function(result) {
            //            $("#UpdateUserModal").modal("hide");
            //            showUserDelete(userName);
            //        },
            //        error: function(jqXHR, textStatus, errorThrown) {
            //            console.log(errorThrown);
            //        }
            //    });
            //});
        //});

        //function showUserEditor(userId) {
        //    $.ajax({
        //        url: API_URL + "/Users/GetUser/" + userId,
        //        beforeSend: function(request) {
        //            request.setRequestHeader("Authorization", "Bearer " + TOKEN);
        //        },
        //        success: function(user) {
        //            $("#UpdateFirstName").val(user.FirstName);
        //            $("#UpdateLastName").val(user.LastName);
        //            $("#UpdateUserModal").modal("show");
        //        }
        //    });
        //}

        //function showUserSuccess() {
        //    var msg = "User: <b>" + $("#FirstName").val() + " " + $("#LastName").val() + "</b> successfully created!";

        //    $(".alert-success .msg")
        //        .html(msg)
        //        .parent()
        //            .removeClass("hidden")
        //            .slideDown();

        //    // reset form
        //    $("#FirstName").val("");
        //    $("#LastName").val("");
        //    $("#Password").val("");
        //    $("#ConfirmPassword").val("");
        //    $("#Email").val("");

        //    // update tree
        //    //updateTree();
        //}

        //function showUserFailure(msg) {

        //    $(".alert-danger .msg")
        //        .html(msg)
        //        .parent()
        //        .removeClass("hidden")
        //        .slideDown();

        //    // update tree
        //    //updateTree();
        //}

        //function showUserUpdate() {
        //    var msg = "User: <b>" + $("#UpdateFirstName").val() + " " + $("#UpdateLastName").val() + "</b> successfully updated!";

        //    $(".alert-success .msg")
        //        .html(msg)
        //        .parent()
        //        .removeClass("hidden")
        //        .slideDown();

        //    // update tree
        //    //updateTree();
        //}

        //function showUserDelete(userName) {
        //    var msg = "User: <b>" + userName + "</b> successfully deleted!";

        //    $(".alert-danger .msg")
        //        .html(msg)
        //        .parent()
        //        .removeClass("hidden")
        //        .slideDown();

        //    // update tree
        //    //updateTree();
        //}
    </script>
    <script type="text/javascript">
        (function() {
            var app = angular.module("LMS", ["kendo.directives"]);

            var UserManageController = function($scope, $http) {

                // removing var here allows us to debug in the browsers console. Alternatively we could do window.emailScope = $scope
                userManageScope = $scope;
                userManageScope.httpService = $http;
                userManageScope.treeData = [{ id: -1, text: "" }];
                userManageScope.itemTemplate = "<span ng-click='openEditor(dataItem)'>{{dataItem.text}}</span>";
                userManageScope.CurrentUser = {}; //{id: -1, ClientId: -1, FirstName: "", LastName: "", EmailAddress: "", Password: "", ConfirmPassword: "" }
                userManageScope.PasswordsMatch = true;

                userManageScope.loadData = function() {
                    userManageScope.httpService({
                        method: "GET",
                        url: API_URL + "/UsersInUserGroups/GetUserGroupsAndUsers/",
                        headers: {
                            "Authorization": "Bearer " + TOKEN
                        }
                    })
                    .success(function(data) {
                        $(".tree-view").hide();
                        userManageScope.treeData = JSON.parse(data);
                        $(".k-loading").parent().slideUp(function() {
                            $(".tree-view").slideDown(function() {
                                // style the group elements - this needs to be done as late as possible so the DOM items exist.
                                $(".k-sprite.group").parent().css({ "background-color": "#e7e7e7", "padding-right": "15px" });
                            });
                        });
                    })
                    .error(function(data, status) {
                        userManageScope.showSessionFailure(data);
                    });
                };

                userManageScope.checkPasswordsMatch = function() {
                    userManageScope.PasswordsMatch = userManageScope.CurrentUser.Password === userManageScope.CurrentUser.ConfirmPassword;
                }

                userManageScope.createNewUser = function() {
                    if (userManageScope.PasswordsMatch) {
                        userManageScope.httpService({
                                method: "POST",
                                url: API_URL + "/Account/Register/",
                                data: {
                                    FirstName: userManageScope.CurrentUser.FirstName,
                                    LastName: userManageScope.CurrentUser.LastName,
                                    EmailAddress: userManageScope.CurrentUser.EmailAddress,
                                    Password: userManageScope.CurrentUser.Password
                                },
                                headers: {
                                    "Authorization": "Bearer " + TOKEN
                                }
                            })
                            .success(function(data) {
                                userManageScope.showUserSuccess();
                            })
                            .error(function(data, status) {
                                userManageScope.showUserFailure(data);
                            });
                    }
                };

                // the user clicked on the tree. Ascertain whether to open the user editor or ignore
                userManageScope.openEditor = function(dataItem) {
                    $.each(userManageScope.treeData, function(i, groupNode) {
                        if (groupNode.text === dataItem.text) {
                            //console.log("user not in group: " + dataItem.text)
                            userManageScope.loadUserEditor(dataItem.id);
                        }
                        if (groupNode.hasOwnProperty("items")) {
                            $.each(groupNode.items, function(j, userNode) {
                                if (userNode.text === dataItem.text) {
                                    //console.log("user in a group: " + dataItem.text)                               
                                    userManageScope.loadUserEditor(dataItem.id);
                                }
                            });
                        }
                    });
                }

                userManageScope.loadUserEditor = function (selectedUserId) {
                    userManageScope.httpService({
                        method: "GET",
                        url: API_URL + "/Users/GetUser/" + selectedUserId,
                        headers: {
                            "Authorization": "Bearer " + TOKEN
                        }
                    })
                    .success(function (data) {
                        userManageScope.CurrentUser = userManageScope.getDefaultUser();
                        userManageScope.CurrentUser.FirstName = data.FirstName;
                        userManageScope.CurrentUser.LastName = data.LastName;
                        userManageScope.CurrentUser.UserId = selectedUserId;
                        $("#UpdateUserModal").modal("show");
                        
                    })
                    .error(function (data, status) {
                        userManageScope.showSessionFailure(data);
                    });
                }

                userManageScope.editUser = function () {
                    userManageScope.httpService({
                        method: "PATCH",
                        url: API_URL + "/Users/UpdateUser/" + userManageScope.CurrentUser.UserId,
                        data: {
                            FirstName: userManageScope.CurrentUser.FirstName,
                            LastName: userManageScope.CurrentUser.LastName,
                            UserId: userManageScope.CurrentUser.UserId
                        },
                        headers: {
                            "Authorization": "Bearer " + TOKEN
                        }
                    })
                    .success(function (data) {
                        $("#UpdateUserModal").modal("hide");
                        userManageScope.showUserUpdate();

                    })
                    .error(function (data, status) {
                        userManageScope.showSessionFailure(data);
                    });
                }

                userManageScope.deleteUser = function () {
                    userManageScope.httpService({
                        method: "DELETE",
                        url: API_URL + "/Users/DeleteUser/" + userManageScope.CurrentUser.UserId,
                        headers: {
                            "Authorization": "Bearer " + TOKEN
                        }
                    })
                    .success(function (data) {
                        $("#UpdateUserModal").modal("hide");
                        userManageScope.showUserDelete();

                    })
                    .error(function (data, status) {
                        userManageScope.showSessionFailure(data);
                    });
                }

                userManageScope.getDefaultUser = function() {

                    var defaultUser = {
                        id: -1,
                        ClientId: -1,
                        FirstName: "",
                        LastName: "",
                        EmailAddress: "",
                        Password: "",
                        ConfirmPassword: ""
                    }

                    return JSON.parse(JSON.stringify(defaultUser));
                }

                userManageScope.showUserSuccess = function() {
                    var msg = "User: <b>" + userManageScope.CurrentUser.FirstName + " " + userManageScope.CurrentUser.LastName + "</b> successfully created!";

                    $(".alert-success .msg")
                        .html(msg)
                        .parent()
                        .removeClass("hidden")
                        .slideDown();

                    // reset form
                    userManageScope.CurrentUser = userManageScope.getDefaultUser();

                    // update tree
                    userManageScope.loadData();
                }
                
                userManageScope.showUserUpdate = function () {
                    var msg = "User: <b>" + userManageScope.CurrentUser.FirstName + " " + userManageScope.CurrentUser.LastName + "</b> successfully updated!";

                    $(".alert-success .msg")
                        .html(msg)
                        .parent()
                        .removeClass("hidden")
                        .slideDown();

                    // update tree
                    userManageScope.loadData();
                }

                userManageScope.showUserDelete = function () {
                    var msg = "User: <b>" + userManageScope.CurrentUser.FirstName + " " + userManageScope.CurrentUser.LastName + "</b> successfully deleted!";

                    $(".alert-danger .msg")
                        .html(msg)
                        .parent()
                        .removeClass("hidden")
                        .slideDown();

                    // update tree
                    userManageScope.loadData();
                }

                userManageScope.showUserFailure = function(data) {

                    $(".alert-danger .msg")
                        .html(data.ExceptionMessage)
                        .parent()
                        .removeClass("hidden")
                        .slideDown();
                }

                // run the initialize method
                userManageScope.loadData();

            }
            app.controller("UserManageController", ["$scope", "$http", UserManageController]);
        }());
    </script>
}