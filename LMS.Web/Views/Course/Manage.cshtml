@{
    ViewBag.Title = "Manage Course Categories";
    Layout = "~/Views/Shared/_Layout.admin.cshtml";
}
@section head {
    <link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/Content/kendo-styles/kendo.silver.min.css" rel="stylesheet" />
    <link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.dataviz.min.css" rel="stylesheet" />
    <link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.dataviz.default.min.css" rel="stylesheet" />
}
<div class="row col-md-12">
    <div class="col-md-3">
        <a href="#" id="ShowCategoryCreator" class="btn btn-sm btn-primary">Add new category »</a>
        <br /><br />
        <div id="treeview" data-role="treeview" class="k-widget k-treeview" tabindex="0" role="tree" aria-activedescendant="treeview_tv_active">
            <div class="k-loading" style="display: inline-block; width: 16px; height: 16px; top: 0; left: 0;"></div>&nbsp;Loading...
        </div>
        <div id="result"></div>
    </div>
    <div id="EditorContainer" class="col-md-9">
        <div class="form-group row col-md-12">
            <div class="col-md-6">
                <label class="control-label" for="CategoryName">Category Name:</label>
                <input id="CategoryName" class="form-control text-box single-line" type="text" placeholder="Course category name..." />
            </div>
            <div class="col-md-6" style="margin-top: 2em">
                <button id="CreateCategory" type="button" class="btn btn-primary pull-right">Save</button>
                <a href="#" data-toggle="modal" data-target="#DeleteCategoryModal" class="editor-btn btn btn-danger pull-right hidden" style="margin-left: 1em">Delete</a>
                <button id="UpdateCategory" type="button" class="editor-btn btn btn-primary pull-right hidden">Update</button>
            </div>
            <div class="clearfix"></div>
            <hr />
            <div class="col-md-12">
                <label class="control-label" for="CategoryNotes">Category Notes:</label>
                <textarea id="CategoryNotes" class="form-control" cols="40" rows="5" placeholder="A brief description of the new course category..."></textarea>
                <br />
                <a href="#" data-toggle="modal" data-target="#CreateCourseModal" class="editor-btn btn btn-primary pull-right hidden">Add course to&nbsp;<span style="text-decoration: underline" class="currentCategoryName"></span> »</a>
            </div>
        </div>
    </div>
    <div id="LoadingContainer" class="col-md-9 hidden">
        <div class="k-loading" style="display: inline-block; width: 16px; height: 16px; top: 0; left: 0;"></div>&nbsp;Loading...        
    </div>
    <div id="CourseContainer" class="col-md-9 hidden">
        <p class="lead">Click below to add content, create sessions, and manage <span style="text-decoration: underline" class="courseName"></span>.</p>
        <a href="#" data-toggle="modal" data-target="#DeleteCourseModal" class="btn btn-danger pull-right" style="margin-left: 1em">Delete</a>
        <a href="#" id="EditCourse" class="btn btn-primary pull-right" style="margin-left: 1em">Manage Course &raquo;</a>
        <a href="#" id="ManageSessions" class="btn btn-primary pull-right">Manage Session &raquo;</a>
    </div>
</div>

@* -- Delete Category Modal -- *@
<div class="modal fade" id="DeleteCategoryModal" tabindex="-1" role="dialog" aria-labelledby="DeleteCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Delete</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-offset-1">Are you sure you want to delete client category&nbsp;<span style="text-decoration: underline" class="currentCategoryName"></span>?</label>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1">
                            <button id="DeleteCategory" type="button" class="btn btn-danger btn-default">Delete</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@* -- Create Course Modal -- *@
<div class="modal fade" id="CreateCourseModal" tabindex="-1" role="dialog" aria-labelledby="CreateCourseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Create Course</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-2">Course Name</label>
                        <div class="col-md-10">
                            <input id="CourseName" class="form-control text-box single-line" type="text" placeholder="Course name..." />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2">Course Description</label>
                        <div class="col-md-10">
                            <textarea id="CourseDescription" class="form-control" cols="40" rows="5" placeholder="A brief description of the new course..."></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button id="CreateCourse" type="button" class="btn btn-default btn-primary">Save</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@* -- Delete Course Modal -- *@
<div class="modal fade" id="DeleteCourseModal" tabindex="-1" role="dialog" aria-labelledby="DeleteCourseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Delete</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-offset-1">Are you sure you want to delete course&nbsp;<span style="text-decoration: underline" class="currentCourseName"></span>?</label>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1">
                            <button id="DeleteCourse" type="button" class="btn btn-danger btn-default">Delete</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript" src="http://cdn.kendostatic.com/2014.2.903/js/kendo.all.min.js"></script>
    <script type="text/javascript" title="Kendo UI tree">
        var course;
        var courseCategories;
        
        $(function () {
            $.ajax({
                url: "@this.GetApiUrl()" + "/CoursesInCourseCategories/GetCourseCategoriesAndCourses/",
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + "@this.GetToken()");
                },
                success: function (categories) {
                    $("#treeview").kendoTreeView({
                        checkboxes: {
                            checkChildren: true
                        },
                        check: onCheck,
                        dataSource: JSON.parse(categories)
                    });
                    courseCategories = JSON.parse(categories);
                }
            });
        });
        // function that gathers IDs of checked nodes
        function checkedNodeIds(nodes, checkedNodes) {
            for (var i = 0; i < nodes.length; i++) {
                if (nodes[i].checked) {
                    checkedNodes.push(nodes[i].id);
                }

                if (nodes[i].hasChildren) {
                    checkedNodeIds(nodes[i].children.view(), checkedNodes);
                }
            }
        }

        // show checked node IDs on datasource change
        function onCheck() {
            var checkedNodes = [],
                treeView = $("#treeview").data("kendoTreeView"),
                message;

            checkedNodeIds(treeView.dataSource.view(), checkedNodes);

            if (checkedNodes.length > 0) {
                message = "IDs of checked nodes: " + checkedNodes.join(",");
            } else {
                message = "No nodes checked.";
            }

            $("#result").html(message);
        }

        function loadCategories() {
            $.ajax({
                url: "@this.GetApiUrl()" + "/CoursesInCourseCategories/GetCourseCategoriesAndCourses/",
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + "@this.GetToken()");
                },
                success: function (categories) {
                    populateTree(JSON.parse(categories));
                    courseCategories = JSON.parse(categories);
                }
            });
        }

        function populateTree(treeData) {
            var treeview = $("#treeview").data("kendoTreeView");
            treeview.setDataSource(new kendo.data.HierarchicalDataSource({
                data: treeData
            }));
        }

        // bind to ajax created elements (clicking on categories in tree)
        $(document).on('click', '.k-in', function () {
            var Name = $(this).html();
            var isCourse = true;
            $.each(courseCategories, function () {
                if (this.text == Name) {
                    categoryId = this.id;
                    loadCategoryEditor(this.id);
                    categoryName = Name;
                    $(".currentCategoryName").html(Name);
                    isCourse = false;
                }
            });

            // not a course category. Must be a course.
            if (isCourse) {
                loadCourseEditor(Name);
                course = getCourseByName(Name);
                $(".currentCourseName").html(Name);
            }
        });
    </script>
    <script type="text/javascript" title="Manage Course Categories">        
        var categoryId = -1;
        var categoryName = "";

        // Create
        $(function () {
            $("#CreateCategory").click(function () {
                $.ajax({
                    url: "@this.GetApiUrl()" + "/CourseCategories/CreateCourseCategory/",
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + "@this.GetToken()");
                    },
                    data: { Name: $("#CategoryName").val(), Notes: $("#CategoryNotes").val() },
                    type: "POST",
                    cache: false,
                    success: function (result) {
                        showCategorySuccess(result);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log("error");
                    }
                });
            });            
        });

        function showCategorySuccess(result) {
            var msg = "Category: <b>" + result.Name + "</b> successfully created!";

            $(".alert-success .msg")
                .html(msg)
                .parent()
                    .removeClass("hidden")
                    .slideDown();

            $('#treeview').slideUp();
            loadCategories();
            $('#treeview').slideDown();
            loadCategoryEditor(result.CourseCategoryId);

            // set cat id and cat name for update/delete
            categoryId = result.CourseCategoryId;
            categoryName = result.Name;
        }

        // Update
        $(function () {
            $("#UpdateCategory").click(function () {
                var categoryName = $("#CategoryName").val();
                var categoryNotes = $("#CategoryNotes").val();

                $.ajax({
                    url: "@this.GetApiUrl()" + "/CourseCategories/UpdateCourseCategory/" + categoryId,
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + "@this.GetToken()");
                    },
                    data: { CourseCategoryId: categoryId, Name: categoryName, Notes: categoryNotes },
                    type: "PUT",
                    cache: false,
                    success: function (result) {
                        showCategoryUpdated();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log("error");
                    }
                });
            });
        });

        function showCategoryUpdated() {
            var msg = "Category: <b>" + $("#CategoryName").val() + "</b> successfully updated!";

            $(".alert-success .msg")
                .html(msg)
                .parent()
                    .removeClass("hidden")
                    .slideDown();

            $('#treeview').slideUp();
            loadCategories();
            $('#treeview').slideDown();
        }

        // Delete
        $("#DeleteCategory").click(function () {
            $.ajax({
                url: "@this.GetApiUrl()" + "/CourseCategories/DeleteCourseCategory/" + categoryId,
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + "@this.GetToken()");
                },
                type: "DELETE",
                cache: false,
                success: function (result) {
                    $("#DeleteCategoryModal").modal("hide");
                    showCategoryDelete();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log("error");
                }
            });
        });

        function showCategoryDelete() {
            var msg = "Client: <b>" + categoryName + "</b> successfully deleted!";

            $(".alert-success .msg")
                .html(msg)
                .parent()
                    .removeClass("hidden")
                    .slideDown();

            $('#treeview').slideUp();
            loadCategories();
            $('#treeview').slideDown();
            loadCategoryCreator();
        }

        // Library functions
        function loadCategoryEditor(categoryId) {
            // hide editor and show loading
            $("#EditorContainer").slideUp();
            $("#CourseContainer").hide();
            $("#LoadingContainer").slideDown(function () {
                //get the data
                $.ajax({
                    url: "@this.GetApiUrl()" + "/CourseCategories/GetCourseCategory/" + categoryId,
                    beforeSend: function (request) {
                        request.setRequestHeader("Authorization", "Bearer " + "@this.GetToken()");
                    },
                    success: function (category) {
                        $("#CategoryName").val(category.Name);
                        $("#CategoryNotes").val(category.Notes);
                    }
                });

                // hide loading and show the update editor
                $("#LoadingContainer").slideUp();
                $("#EditorContainer").slideDown();               

                // show the update / delete category buttons, and the create course button
                $("#CreateCategory").hide();
                $(".editor-btn").removeClass("hidden");
            });
        }

        $("#ShowCategoryCreator").click(loadCategoryCreator);

        function loadCategoryCreator() {
            // hide editor and show loading
            $("#EditorContainer").slideUp();
            $("#CourseContainer").hide();
            $("#EditorContainer").slideDown(function () {
                // clear the fields
                $("#CategoryName").val("");
                $("#CategoryNotes").val("");
                // hide the update and delete buttons, show the create button
                $(".editor-btn").addClass("hidden");
                $("#CreateCategory").show();
            });
        }        
    </script>
    <script type="text/javascript" title="Manage Course">
    $(function () {
        $("#CreateCourse").click(function () {
            $.ajax({
                url: "@this.GetApiUrl()" + "/Courses/CreateCourse/",
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + "@this.GetToken()");
                },
                data: { Name: $("#CourseName").val(), Description: $("#CourseDescription").val() },
                type: "POST",
                cache: false,
                success: function (result) {
                    addCourseToCourseCategory(result);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log("error");
                }
            });
        });
    });

    function addCourseToCourseCategory(course) {
        var courseId = course.CourseId;
        var courseName = course.Name;

        $.ajax({
            url: "@this.GetApiUrl()" + "/CoursesInCourseCategories/AddCourseToCourseCategory/",
            beforeSend: function (request) {
                request.setRequestHeader("Authorization", "Bearer " + "@this.GetToken()");
            },
            data: { CourseCategoryId: categoryId, CourseId: courseId },
            type: "POST",
            cache: false,
            success: function (result) {
                $("#CreateCourseModal").modal("hide");
                showCourseSuccess(courseName);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log("error");
            }
        });
    }

    function showCourseSuccess(courseName) {
        var msg = "Course: <b>" + courseName + "</b> successfully added to category: <b>" + categoryName + "</b>.";

        $(".alert-success .msg")
            .html(msg)
            .parent()
                .removeClass("hidden")
                .slideDown();

        $('#treeview').slideUp();
        loadCategories();
        $('#treeview').slideDown();
    }

    // Delete
    $(function () {
        $("#DeleteCourse").click(function () {
            $.ajax({
                url: "@this.GetApiUrl()" + "/CoursesInCourseCategories/DeleteCourseInCourseCategory/",
                beforeSend: function (request) {
                    request.setRequestHeader("Authorization", "Bearer " + "@this.GetToken()");
                },
                data: { CourseCategoryId: categoryId, CourseId: course.id },
                type: "DELETE",
                cache: false,
                success: function (result) {
                    $("#DeleteCourseModal").modal("hide");
                    showCourseDelete();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log("error");
                }
            });
        });
    });

    function showCourseDelete() {
        var msg = "Course: <b>" + course.text + "</b> successfully deleted!";

        $(".alert-success .msg")
            .html(msg)
            .parent()
                .removeClass("hidden")
                .slideDown();

        $('#treeview').slideUp();
        loadCategories();
        $('#treeview').slideDown();
        loadCategoryCreator();
    }

    function loadCourseEditor(courseName) {
        var course = getCourseByName(courseName);
        var editUrl = "@Url.Action("Edit", "Course")" + "/" + course.id;
        var sessionUrl = "@Url.Action("Session", "Course")" + "/" + course.id;

        // hide editor and show loading
        $("#EditorContainer").hide();
        $("#CourseContainer").slideDown(function () {
            $(".courseName").html(courseName);
            $("#EditCourse").attr("href", editUrl);
            $("#ManageSessions").attr("href", sessionUrl);
            $(this).removeClass("hidden");
        });
    }

    function getCourseByName(courseName) {
        var ret;
        $.each(courseCategories, function (categoryIndex, category) {
            $.each(category.items, function (courseIndex, course) {
                if (course.text == courseName) {
                    ret = course;
                    categoryId = category.id;
                }
            });
        });

        return ret;
    }
    </script>
}