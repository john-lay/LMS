@{
    ViewBag.Title = "Report";
}
@section head {
    <link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.common.min.css" rel="stylesheet" />
    <link href="~/Content/kendo-styles/kendo.silver.min.css" rel="stylesheet" />
    <link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.dataviz.min.css" rel="stylesheet" />
    <link href="http://cdn.kendostatic.com/2014.2.903/styles/kendo.dataviz.default.min.css" rel="stylesheet" />
    <!-- Data Tables -->
    <link href="~/Content/DataTables/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/DataTables/dataTables.tableTools.min.css" rel="stylesheet" />
}
<div data-ng-controller="ReportController">
    <div class="row col-md-12 form-horizontal">
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-4">Start Date</label>
                <div class="col-md-8">
                    <div class="input-group">
                        <input id="EditStartDate" type="text" class="form-control datepicker" placeholder="Select date" />
                        <label for="EditStartDate" class="input-group-addon">
                            <i class="input-append glyphicon glyphicon-calendar"></i>
                        </label>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-4">End Date</label>
                <div class="col-md-8">
                    <div class="input-group">
                        <input id="EditEndDate" type="text" class="form-control datepicker" placeholder="Select date" />
                        <label for="EditEndDate" class="input-group-addon">
                            <i class="input-append glyphicon glyphicon-calendar"></i>
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row col-md-12 form-horizontal">
        <div class="col-md-6">
            <div class="form-group">
                <label class="col-md-4 control-label">User Group</label>
                <div class="col-md-8">
                    <select class="form-control" data-ng-options="userGroup in UserGroupList" data-ng-model="Filter.UserGroup"></select>
                </div>
            </div>
        </div>
        @*<div class="col-md-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">Course type</label>
                    <div class="col-md-8">
                        <select class="form-control">
                            <option>e-learning</option>
                        </select>
                    </div>
                </div>
            </div>*@
        <div class="col-md-6">
            <div class="form-group">
                <label class="col-md-4 control-label">Status</label>
                <div class="col-md-8">
                    <select class="form-control">
                        <option>complete</option>
                        <option>due</option>
                        <option>overdue</option>
                        <option>pending</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
    <div class="row col-md-12 form-horizontal">
        <div class="col-md-6">
            <div class="form-group">
                <label class="col-md-4 control-label">Course Category</label>
                <div class="col-md-8">
                    <select class="form-control" data-ng-options="courseCategory as courseCategory.Name for courseCategory in CourseCategoryList" data-ng-model="Filter.CourseCategory"></select>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="col-md-4 control-label">Course</label>
                <div class="col-md-8">
                    <select class="form-control" data-ng-options="course as course.Name for course in in CourseList" data-ng-model="Filter.Course"></select>
                </div>
            </div>
        </div>
        <div class="clearfix"><br /></div>
    </div>
    <div class="row col-md-12 form-horizontal">
        <div class="col-md-6">
            <div class="form-group">
                <div class="col-md-offset-4 col-md-8">
                    <button data-ng-click="emailSelectedUsers()" type="button" class="btn btn-default btn-primary pull-right">Email Selected Users</button>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <div class="col-md-offset-4 col-md-8">                    
                    <button data-ng-click="applyReportFilter()" type="button" class="btn btn-default btn-success pull-right" style="margin-left: 6px">Apply Filter</button>
                    <button data-ng-click="resetReportFilter()" type="button" class="btn btn-default pull-right">Reset</button>
                </div>
            </div>
        </div>
        <div class="clearfix"><br /></div>
    </div>
    <div class="clearfix" style="margin-bottom: 3em;"></div>
    <hr />
    <div style="margin-bottom: 5em;"></div>
    @*<div data-ng-show="ResultsList.length === 0"  class="panel panel-default">
        <div class="panel-body">
            Sorry there were no results for your query, please refine your search and try again.
        </div>
    </div>
    <table data-ng-show="ResultsList.length > 0" id="ReportResults" class="display" cellspacing="0" width="100%">*@
    <table id="ReportResults" datatable="" dt-options="dtOptions" dt-columns="dtColumns" class="display" cellspacing="0" width="100%">
        @*<table id="ReportResults" class="display" cellspacing="0" width="100%">*@
        @*<thead>
            <tr>
                <th width="8%" class="text-center">Selected</th>
                <th width="14%">First Name</th>
                <th width="14%">Last Name</th>
                <th width="14%">In Group</th>
                <th width="8%">Learning Complete</th>
                <th width="18%">Course</th>
                <th width="8%">Start Date</th>
                <th width="8%">End Date</th>
                <th width="8%">Rolling Course</th>
            </tr>
        </thead>
        <tfoot>
            <tr>
                <th width="8%" class="text-center">Selected</th>
                <th width="14%">First Name</th>
                <th width="14%">Last Name</th>
                <th width="14%">In Group</th>
                <th width="8%">Learning Complete</th>
                <th width="18%">Course</th>
                <th width="8%">Start Date</th>
                <th width="8%">End Date</th>
                <th width="8%">Rolling Course</th>
            </tr>
        </tfoot>*@
        @*<tbody>
                <tr data-ng-repeat="result in ResultsList">
                    <td width="8%" class="text-center"><input data-ng-click="addSelectedResult(result)" type="checkbox" name="result" /></td>
                    <td width="14%">{{result.FirstName}}</td>
                    <td width="14%">{{result.LastName}}</td>
                    <td width="14%">{{result.UserGroupName}}</td>
                    <td width="8%">{{result.LearningComplete}}</td>
                    <td width="18%">{{result.CourseCategoryName !== "" ? result.CourseCategoryName + " &gt; " : "" }}{{result.CourseName}}</td>
                    <td width="8%">{{getDateStringFromJSONString(result.StartDate)}}</td>
                    <td width="8%">{{getDateStringFromJSONString(result.EndDate)}}</td>
                    <td width="8%">{{result.IsRolling}}</td>
                    <!--<td>{{result.UserId}}</td>-->
                    <!--<td>{{result.EmailAddress}}</td>-->
                    <!--<td>{{result.CourseType}}</td>-->
                </tr>
            </tbody>*@
    </table>
    <div style="margin-bottom: 5em;"></div>
</div>
@section scripts {
    <script type="text/javascript" src="http://cdn.kendostatic.com/2014.2.903/js/kendo.all.min.js"></script>
    <script src="~/Scripts/Library/bootstrap/bootstrap-datepicker.js"></script>
    <!-- Data Tables -->
    <script src="~/Scripts/Library/DataTables/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/Library/DataTables/dataTables.tableTools.min.js"></script>
    <script src="~/Scripts/Library/DataTables/angular-datatables.min.js"></script>
    <script src="~/Scripts/Library/DataTables/angular-datatables.tabletools.min.js"></script>
    <script src="~/Scripts/Library/angular/angular-resource.min.js"></script>
    @*<script type="text/javascript">
        var REPORT_DATA;
        $(function() {
            $('.datepicker').datepicker({
                todayHighlight: true,
                startDate: new Date(),
                autoclose: true,
                format: 'dd/mm/yyyy'
            });

            // data tables
            $('#ReportResults').DataTable({
                dom: 'T<"clear">lfrtip',
                ajax: {
                    url: API_URL + "/Reports/GetBasicReport/",
                    type: "GET",
                    beforeSend: function(request) {
                        request.setRequestHeader("Authorization", "Bearer " + TOKEN);
                    },
                    dataSrc: function(result) {
                        var ret = { data: [] };
                        ret.data = JSON.parse(result);
                        //$.each(ret.data, function(i, item) {
                        //    delete ret.data[i].EmailAddress;
                        //    delete ret.data[i].CourseType;
                        //    ret.data[i].CourseName = ret.data[i].CourseCategoryName !== "" ? ret.data[i].CourseCategoryName + " > " + ret.data[i].CourseName : ret.data[i].CourseName;
                        //    delete ret.data[i].CourseCategoryName;
                        //    if (!ret.data[i].IsRolling) ret.data[i].IsRolling = "no";
                        //    if (!ret.data[i].LearningComplete) ret.data[i].LearningComplete = "no";
                        //    ret.data[i].UserId = "no";

                        //});
                        //ret.data = ret.data[2];
                        //ret.aaData = ret.data;
                        //ret.aoData = ret.data;
                        //console.log(ret);
                        return ret;
                    }
                },
                columns: [
                    { data: "UserId" },
                    { data: "FirstName" },
                    { data: "LastName" },
                    { data: "UserGroupName" },
                    { data: "LearningComplete" },
                    { data: "CourseName" },
                    { data: "StartDate" },
                    { data: "EndDate" },
                    { data: "IsRolling" }
                ],
                deferRender: true,
                tableTools: {
                    "sSwfPath": "@Url.Content("~/Scripts/Library/DataTables/swf/copy_csv_xls_pdf.swf")"
                }
            });

            //$('.dataTables_empty').parent().hide();
            //$('#ReportResults_filter').parent().hide();
        });
    </script>*@
    <script type="text/javascript">
        (function() {
            //var app = angular.module("LMS", ["kendo.directives"]);
            var app = angular.module("LMS", ['ngResource', 'datatables', 'datatables.tabletools']);

            var ReportController = function($scope, DTOptionsBuilder, DTColumnBuilder, $q, $http, $resource) {

                // removing var here allows us to debug in the browsers console. Alternatively we could do window.emailScope = $scope
                reportScope = $scope;
                reportScope.httpService = $http;
                reportScope.ResultsList = [];
                reportScope.selected = {};

                reportScope.UserGroupList = [];
                reportScope.CourseCategoryList = [];
                reportScope.CourseList = [];
                reportScope.Filter = {UserGroup: "", CourseCategory: "", Course: ""}

                reportScope.addUser = function(data) {
                    console.log("adding user data...");
                    console.log(data);
                }

                reportScope.dtOptions = DTOptionsBuilder.fromFnPromise(function () {
                        var defer = $q.defer();
                        reportScope.httpService({
                                method: "GET",
                                url: API_URL + "/Reports/GetBasicReport/",
                                headers: {
                                    "Authorization": "Bearer " + TOKEN
                                }
                            })
                            .success(function (data) {
                                var result = JSON.parse(data);
                                reportScope.populateDropDowns(result);
                                defer.resolve(reportScope.formatData(result));
                            });
                        return defer.promise;
                    })
                    .withPaginationType('full_numbers')
                    .withTableTools('@Url.Content("~/Scripts/Library/DataTables/swf/copy_csv_xls_pdf.swf")')
                    .withTableToolsButtons([
                        'copy',
                        'print', {
                            'sExtends': 'collection',
                            'sButtonText': 'Save',
                            'aButtons': ['csv', 'xls', 'pdf']
                        }
                    ]);

                reportScope.dtColumns = [
                    DTColumnBuilder.newColumn(null).withTitle('Selected').notSortable()
                    .renderWith(function(data, type, full, meta) {
                        return '<input type="checkbox" data-ng-change="addUser(' + data.UserId + ')"/>';
                    }),
                    DTColumnBuilder.newColumn('UserId').withTitle('ID').notVisible(),
                    DTColumnBuilder.newColumn('FirstName').withTitle('First Name'),
                    DTColumnBuilder.newColumn('LastName').withTitle('Last Name'),
                    DTColumnBuilder.newColumn('UserGroupName').withTitle('In Group'),
                    DTColumnBuilder.newColumn('LearningComplete').withTitle('Learning Complete'),
                    DTColumnBuilder.newColumn('CourseName').withTitle('Course'),
                    DTColumnBuilder.newColumn('StartDate').withTitle('Start Date'),
                    DTColumnBuilder.newColumn('EndDate').withTitle('End Date')
                ];

                reportScope.populateDropDowns = function (data) {
                    $.each(data, function (i, item) {
                        if (item.UserGroupName !== null && reportScope.UserGroupList.indexOf(item.UserGroupName) !== -1) reportScope.UserGroupList.push(item.UserGroupName);
                        if (item.CourseCategoryName !== null && reportScope.CourseCategoryList.indexOf(item.CourseCategoryName) !== -1) reportScope.CourseCategoryList.push(item.CourseCategoryName);
                        if (item.CourseName !== null && reportScope.CourseList.indexOf(item.CourseName) !== -1) reportScope.CourseList.push(item.CourseName);
                    });
                }

                reportScope.formatData = function (data) {
                    var result = data;
                    $.each(result, function (i, item) {
                        result[i].StartDate = reportScope.getDateStringFromJSONString(result[i].StartDate);
                        result[i].EndDate = reportScope.getDateStringFromJSONString(result[i].EndDate);
                    });

                    return result;
                }

                //reportScope.loadData = function() {
                //    reportScope.httpService({
                //            method: "GET",
                //            url: API_URL + "/Reports/GetBasicReport/",
                //            headers: {
                //                "Authorization": "Bearer " + TOKEN
                //            }
                //        })
                //        .success(function(data) {
                //            reportScope.ResultsList = JSON.parse(data);
                //            REPORT_DATA = reportScope.ResultsList;
                //            //var filteredResults = reportScope.ResultsList;
                //            //$.each(filteredResults, function(i, item) {
                //            //    delete filteredResults[i].UserId;
                //            //    delete filteredResults[i].EmailAddress;
                //            //    delete filteredResults[i].CourseType;
                //            //});
                //            //$('#ReportResults').dataTable({
                //            //    "ajax": { "data": filteredResults }
                //            //});
                //            console.log(reportScope.ResultsList);
                //        })
                //        .error(function(data, status) {
                //            reportScope.showReportFailure(data);
                //        });
                //};

                reportScope.getDateStringFromJSONString = function(JSONString) {
                    var dateString = JSONString.match(/[0-9]+/g)[0];
                    var formattedDate = new Date(parseInt(dateString, 10));
                    var d = formattedDate.getDate().toString();
                    var m = formattedDate.getMonth().toString();
                    m += 1; // JavaScript months are 0-11
                    var y = formattedDate.getFullYear();

                    // prepend single day/month with zero
                    d = ('0' + d).slice(-2);
                    m = ('0' + m).slice(-2);

                    return d + "/" + m + "/" + y;
                }

                reportScope.showReportFailure = function(data) {
                    $(".alert-danger .msg")
                        .html(data.ExceptionMessage)
                        .parent()
                        .removeClass("hidden")
                        .slideDown();
                }

                // initialize data
                //reportScope.loadData();

            }
            app.controller("ReportController", ["$scope", "DTOptionsBuilder", "DTColumnBuilder", "$q", "$http", "$resource", ReportController]);
        }());
    </script>
}
